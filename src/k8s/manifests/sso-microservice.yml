apiVersion: v1
kind: ConfigMap
metadata:
  name: microservice-config
  namespace: prometheus-dev
  labels:
    app: microservice
data:
  default.js: |
    module.exports = {
      app: {
        name: 'microservice',
        version: '1.0.0',
        environment: process.env.NODE_ENV || 'production'
      },
      server: {
        port: parseInt(process.env.PORT) || 8080,
        host: '0.0.0.0'
      },
      database: {
        host: process.env.DB_HOST || 'postgres',
        port: parseInt(process.env.DB_PORT) || 5432,
        name: process.env.DB_NAME || 'microservice_db',
        username: process.env.DB_USER || 'postgres',
        password: process.env.DB_PASSWORD || 'password',
        pool: {
          min: 2,
          max: 10,
          acquireTimeoutMillis: 60000,
          idleTimeoutMillis: 600000
        }
      },
      redis: {
        host: process.env.REDIS_HOST || 'redis',
        port: parseInt(process.env.REDIS_PORT) || 6379,
        db: 0,
        keyPrefix: 'microservice:'
      },
      logging: {
        level: process.env.LOG_LEVEL || 'info',
        format: 'json',
        enableConsole: true,
        enableFile: false
      },
      cors: {
        origin: '*',
        methods: ['GET', 'POST', 'PUT', 'DELETE'],
        allowedHeaders: ['Content-Type', 'Authorization']
      },
      rateLimit: {
        windowMs: 15 * 60 * 1000, // 15 minutes
        max: 100 // requests per windowMs
      }
    };

---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice-deployment
  namespace: prometheus-dev
  labels:
    app: microservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: microservice
  template:
    metadata:
      labels:
        app: microservice
    spec:
      containers:
      - name: microservice
        image: andreipadureanu/sso:test
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        env:
        - name: NODE_ENV
          value: "production"
        workingDir: /app
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      volumes:
      - name: config-volume
        configMap:
          name: microservice-config

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: microservice-service
  namespace: prometheus-dev
  labels:
    app: microservice
spec:
  selector:
    app: microservice
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  type: ClusterIP

---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: microservice-ingress
  namespace: prometheus-dev
  labels:
    app: microservice
  annotations:
    # Common ingress annotations
    kubernetes.io/ingress.class: "nginx"
    # Rate limiting (optional)
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  rules:
  - host: prometheus.local
    http:
      paths:
      - path: /api/sso
        pathType: Prefix
        backend:
          service:
            name: microservice-service
            port:
              number: 80
